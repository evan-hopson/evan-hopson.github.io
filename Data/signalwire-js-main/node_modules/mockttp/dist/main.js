"use strict";
/**
 * @module Mockttp
 */
Object.defineProperty(exports, "__esModule", { value: true });
const mockttp_server_1 = require("./server/mockttp-server");
const mockttp_client_1 = require("./client/mockttp-client");
const mockttp_standalone_1 = require("./standalone/mockttp-standalone");
// Export the core type definitions:
var types_1 = require("./types");
exports.Method = types_1.Method;
// Export rule data builders & type definitions:
const matchers = require("./rules/matchers");
exports.matchers = matchers;
const handlers = require("./rules/handlers");
exports.handlers = handlers;
const completionCheckers = require("./rules/completion-checkers");
exports.completionCheckers = completionCheckers;
// Export TLS utilities:
var tls_1 = require("./util/tls");
exports.generateCACertificate = tls_1.generateCACertificate;
exports.generateSPKIFingerprint = tls_1.generateSPKIFingerprint;
// Export the core API:
/**
 * Get a Mockttp instance on the local machine.
 *
 * In most simple environments, you can call this method directly and immediately
 * get a Mockttp instance and start mocking servers.
 *
 * In node, the mocked servers will run in process and require no further setup.
 *
 * In browsers this is an alias for getRemote. You'll need to start a standalone server
 * outside your tests before calling this, which will create and manage your fake servers
 * outside the browser.
 */
function getLocal(options = {}) {
    return new mockttp_server_1.default(options);
}
exports.getLocal = getLocal;
/**
 * Get a Mockttp instance, controlled through a Mockttp standalone server.
 *
 * This connects to a Mockttp standalone server, and uses that to start
 * and stop mock servers.
 */
function getRemote(options = {}) {
    return new mockttp_client_1.default(options);
}
exports.getRemote = getRemote;
/**
 * Get a standalone server, which can be used remotely to create & manage mock servers.
 *
 * This function exists so you can set up these servers programmatically, but for most
 * usage you can just run your tests via the `mockttp` binary, which will automatically
 * start and stop a standalone server for you:
 *
 * ```
 * mockttp -c <your test command>
 * ```
 */
function getStandalone(options = {}) {
    return new mockttp_standalone_1.MockttpStandalone(options);
}
exports.getStandalone = getStandalone;
//# sourceMappingURL=main.js.map