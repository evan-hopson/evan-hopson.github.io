export declare type Omit<T, K> = Pick<T, Exclude<keyof T, K>>;
export declare type RequireProps<T, K extends keyof T> = Omit<T, K> & Required<Pick<T, K>>;
export declare type MaybePromise<T> = T | Promise<T>;
export declare type Replace<T, K extends keyof T, V> = Omit<T, K> & {
    [k in K]: V;
};
